generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  UserSongs     UserSongs[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserSongs {
  id         String   @id @default(cuid())
  songId     String   @unique
  userId     String
  itemBought DateTime
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Album {
  id            String @id @default(cuid())
  title         String
  artist        String
  image         String
  year_released Int
  songs         Song[]
}

model Song {
  id      String @id @default(cuid())
  Album   Album  @relation(fields: [albumId], references: [id], onDelete: Cascade)
  title   String
  length  Int
  albumId String
}
